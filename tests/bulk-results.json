[
  {
    "input": "CH4 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "CH4 + 2O2 → CO2 + 2H2O",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "C2H6 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C2H6 + 7O2 → 4CO2 + 6H2O",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "C3H8 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C3H8 + 5O2 → 3CO2 + 4H2O",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "C4H10 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C4H10 + 13O2 → 8CO2 + 10H2O",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "C5H12 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C5H12 + 8O2 → 5CO2 + 6H2O",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "C6H14 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C6H14 + 19O2 → 12CO2 + 14H2O",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "C7H16 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C7H16 + 11O2 → 7CO2 + 8H2O",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "C8H18 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C8H18 + 25O2 → 16CO2 + 18H2O",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "C9H20 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C9H20 + 14O2 → 9CO2 + 10H2O",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "C10H22 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C10H22 + 31O2 → 20CO2 + 22H2O",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "C11H24 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C11H24 + 17O2 → 11CO2 + 12H2O",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "C12H26 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C12H26 + 37O2 → 24CO2 + 26H2O",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "C13H28 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C13H28 + 20O2 → 13CO2 + 14H2O",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "C14H30 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C14H30 + 43O2 → 28CO2 + 30H2O",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "C15H32 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C15H32 + 23O2 → 15CO2 + 16H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "C16H34 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C16H34 + 49O2 → 32CO2 + 34H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "C17H36 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C17H36 + 26O2 → 17CO2 + 18H2O",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "C18H38 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C18H38 + 55O2 → 36CO2 + 38H2O",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "C19H40 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C19H40 + 29O2 → 19CO2 + 20H2O",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "C20H42 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C20H42 + 61O2 → 40CO2 + 42H2O",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "C21H44 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C21H44 + 32O2 → 21CO2 + 22H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "C22H46 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C22H46 + 67O2 → 44CO2 + 46H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "C23H48 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C23H48 + 35O2 → 23CO2 + 24H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "C24H50 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C24H50 + 73O2 → 48CO2 + 50H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "C25H52 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C25H52 + 38O2 → 25CO2 + 26H2O",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "C26H54 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C26H54 + 79O2 → 52CO2 + 54H2O",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "C27H56 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C27H56 + 41O2 → 27CO2 + 28H2O",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "C28H58 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C28H58 + 85O2 → 56CO2 + 58H2O",
    "error": null,
    "timeMs": 2.1
  },
  {
    "input": "C29H60 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C29H60 + 44O2 → 29CO2 + 30H2O",
    "error": null,
    "timeMs": 2.1
  },
  {
    "input": "C30H62 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C30H62 + 91O2 → 60CO2 + 62H2O",
    "error": null,
    "timeMs": 2.2
  },
  {
    "input": "C31H64 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C31H64 + 47O2 → 31CO2 + 32H2O",
    "error": null,
    "timeMs": 2.2
  },
  {
    "input": "C32H66 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C32H66 + 97O2 → 64CO2 + 66H2O",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "C33H68 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C33H68 + 50O2 → 33CO2 + 34H2O",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "C34H70 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C34H70 + 103O2 → 68CO2 + 70H2O",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "C35H72 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C35H72 + 53O2 → 35CO2 + 36H2O",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "C36H74 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C36H74 + 109O2 → 72CO2 + 74H2O",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C37H76 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C37H76 + 56O2 → 37CO2 + 38H2O",
    "error": null,
    "timeMs": 2.7
  },
  {
    "input": "C38H78 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C38H78 + 115O2 → 76CO2 + 78H2O",
    "error": null,
    "timeMs": 2.7
  },
  {
    "input": "C39H80 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C39H80 + 59O2 → 39CO2 + 40H2O",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C40H82 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C40H82 + 121O2 → 80CO2 + 82H2O",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C2H4 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C2H4 + 3O2 → 2CO2 + 2H2O",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C3H6 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C3H6 + 9O2 → 6CO2 + 6H2O",
    "error": null,
    "timeMs": 2.9
  },
  {
    "input": "C4H8 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C4H8 + 6O2 → 4CO2 + 4H2O",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "C5H10 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C5H10 + 15O2 → 10CO2 + 10H2O",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "C6H12 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C6H12 + 9O2 → 6CO2 + 6H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "C7H14 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C7H14 + 21O2 → 14CO2 + 14H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "C8H16 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C8H16 + 12O2 → 8CO2 + 8H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "C9H18 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C9H18 + 27O2 → 18CO2 + 18H2O",
    "error": null,
    "timeMs": 3.2
  },
  {
    "input": "C10H20 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C10H20 + 15O2 → 10CO2 + 10H2O",
    "error": null,
    "timeMs": 3.2
  },
  {
    "input": "C11H22 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C11H22 + 33O2 → 22CO2 + 22H2O",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "C12H24 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C12H24 + 18O2 → 12CO2 + 12H2O",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "C13H26 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C13H26 + 39O2 → 26CO2 + 26H2O",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "C14H28 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C14H28 + 21O2 → 14CO2 + 14H2O",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "C15H30 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C15H30 + 45O2 → 30CO2 + 30H2O",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "C16H32 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C16H32 + 24O2 → 16CO2 + 16H2O",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "C17H34 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C17H34 + 51O2 → 34CO2 + 34H2O",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "C18H36 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C18H36 + 27O2 → 18CO2 + 18H2O",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "C19H38 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C19H38 + 57O2 → 38CO2 + 38H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "C20H40 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C20H40 + 30O2 → 20CO2 + 20H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "C21H42 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C21H42 + 63O2 → 42CO2 + 42H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "C22H44 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C22H44 + 33O2 → 22CO2 + 22H2O",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "C23H46 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C23H46 + 69O2 → 46CO2 + 46H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "C24H48 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C24H48 + 36O2 → 24CO2 + 24H2O",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "C25H50 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C25H50 + 75O2 → 50CO2 + 50H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "C26H52 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C26H52 + 39O2 → 26CO2 + 26H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "C27H54 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C27H54 + 81O2 → 54CO2 + 54H2O",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "C28H56 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C28H56 + 42O2 → 28CO2 + 28H2O",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "C29H58 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C29H58 + 87O2 → 58CO2 + 58H2O",
    "error": null,
    "timeMs": 2.1
  },
  {
    "input": "C30H60 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C30H60 + 45O2 → 30CO2 + 30H2O",
    "error": null,
    "timeMs": 2.1
  },
  {
    "input": "C2H2 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C2H2 + 5O2 → 4CO2 + 2H2O",
    "error": null,
    "timeMs": 2.2
  },
  {
    "input": "C3H4 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C3H4 + 4O2 → 3CO2 + 2H2O",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "C4H6 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C4H6 + 11O2 → 8CO2 + 6H2O",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "C5H8 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C5H8 + 7O2 → 5CO2 + 4H2O",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "C6H10 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C6H10 + 17O2 → 12CO2 + 10H2O",
    "error": null,
    "timeMs": 2.5
  },
  {
    "input": "C7H12 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C7H12 + 10O2 → 7CO2 + 6H2O",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C8H14 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C8H14 + 23O2 → 16CO2 + 14H2O",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C9H16 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C9H16 + 13O2 → 9CO2 + 8H2O",
    "error": null,
    "timeMs": 2.7
  },
  {
    "input": "C10H18 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C10H18 + 29O2 → 20CO2 + 18H2O",
    "error": null,
    "timeMs": 2.7
  },
  {
    "input": "C11H20 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C11H20 + 16O2 → 11CO2 + 10H2O",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C12H22 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C12H22 + 35O2 → 24CO2 + 22H2O",
    "error": null,
    "timeMs": 2.9
  },
  {
    "input": "C13H24 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C13H24 + 19O2 → 13CO2 + 12H2O",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "C14H26 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C14H26 + 41O2 → 28CO2 + 26H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "C15H28 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C15H28 + 22O2 → 15CO2 + 14H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "C16H30 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C16H30 + 47O2 → 32CO2 + 30H2O",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "C17H32 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C17H32 + 25O2 → 17CO2 + 16H2O",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "C18H34 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C18H34 + 53O2 → 36CO2 + 34H2O",
    "error": null,
    "timeMs": 3.4
  },
  {
    "input": "C19H36 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C19H36 + 28O2 → 19CO2 + 18H2O",
    "error": null,
    "timeMs": 3.5
  },
  {
    "input": "C20H38 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C20H38 + 59O2 → 40CO2 + 38H2O",
    "error": null,
    "timeMs": 3.7
  },
  {
    "input": "CH3OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2CH3OH + 3O2 → 2CO2 + 4H2O",
    "error": null,
    "timeMs": 3.7
  },
  {
    "input": "C2H5OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C2H5OH + 3O2 → 2CO2 + 3H2O",
    "error": null,
    "timeMs": 3.9
  },
  {
    "input": "C3H7OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C3H7OH + 9O2 → 6CO2 + 8H2O",
    "error": null,
    "timeMs": 3.9
  },
  {
    "input": "C4H9OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C4H9OH + 6O2 → 4CO2 + 5H2O",
    "error": null,
    "timeMs": 4
  },
  {
    "input": "C5H11OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C5H11OH + 15O2 → 10CO2 + 12H2O",
    "error": null,
    "timeMs": 4.1
  },
  {
    "input": "C6H13OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C6H13OH + 9O2 → 6CO2 + 7H2O",
    "error": null,
    "timeMs": 4.2
  },
  {
    "input": "C7H15OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C7H15OH + 21O2 → 14CO2 + 16H2O",
    "error": null,
    "timeMs": 4.2
  },
  {
    "input": "C8H17OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C8H17OH + 12O2 → 8CO2 + 9H2O",
    "error": null,
    "timeMs": 4.3
  },
  {
    "input": "C9H19OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C9H19OH + 27O2 → 18CO2 + 20H2O",
    "error": null,
    "timeMs": 4.3
  },
  {
    "input": "C10H21OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C10H21OH + 15O2 → 10CO2 + 11H2O",
    "error": null,
    "timeMs": 4.4
  },
  {
    "input": "C11H23OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C11H23OH + 33O2 → 22CO2 + 24H2O",
    "error": null,
    "timeMs": 4.4
  },
  {
    "input": "C12H25OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C12H25OH + 18O2 → 12CO2 + 13H2O",
    "error": null,
    "timeMs": 4.5
  },
  {
    "input": "C13H27OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C13H27OH + 39O2 → 26CO2 + 28H2O",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "C14H29OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C14H29OH + 21O2 → 14CO2 + 15H2O",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "C15H31OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C15H31OH + 45O2 → 30CO2 + 32H2O",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "C6H6 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C6H6 + 15O2 → 12CO2 + 6H2O",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "C7H8 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C7H8 + 9O2 → 7CO2 + 4H2O",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "C8H10 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "2C8H10 + 21O2 → 16CO2 + 10H2O",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "C9H12 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C9H12 + 12O2 → 9CO2 + 6H2O",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "C10H8 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C10H8 + 12O2 → 10CO2 + 4H2O",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "C6H5CH3 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C6H5CH3 + 9O2 → 7CO2 + 4H2O",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "C6H5OH + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C6H5OH + 7O2 → 6CO2 + 3H2O",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "C6H5NH2 + O2 -> CO2 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.1
  },
  {
    "input": "C6H5CHO + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C6H5CHO + 8O2 → 7CO2 + 3H2O",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "C6H4Cl2 + O2 -> CO2 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.2
  },
  {
    "input": "Li + O2 -> Li2O",
    "success": true,
    "balanced": "4Li + O2 → 2Li2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "Na + O2 -> Na2O",
    "success": true,
    "balanced": "4Na + O2 → 2Na2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "K + O2 -> K2O",
    "success": true,
    "balanced": "4K + O2 → 2K2O",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "Rb + O2 -> Rb2O",
    "success": true,
    "balanced": "4Rb + O2 → 2Rb2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Cs + O2 -> Cs2O",
    "success": true,
    "balanced": "4Cs + O2 → 2Cs2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Mg + O2 -> MgO",
    "success": true,
    "balanced": "2Mg + O2 → 2MgO",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "Ca + O2 -> CaO",
    "success": true,
    "balanced": "2Ca + O2 → 2CaO",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "Sr + O2 -> SrO",
    "success": true,
    "balanced": "2Sr + O2 → 2SrO",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "Ba + O2 -> BaO",
    "success": true,
    "balanced": "2Ba + O2 → 2BaO",
    "error": null,
    "timeMs": 2.2
  },
  {
    "input": "Al + O2 -> Al2O3",
    "success": true,
    "balanced": "4Al + 3O2 → 2Al2O3",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "Zn + O2 -> ZnO",
    "success": true,
    "balanced": "2Zn + O2 → 2ZnO",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "Fe + O2 -> Fe2O3",
    "success": true,
    "balanced": "4Fe + 3O2 → 2Fe2O3",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "Cu + O2 -> CuO",
    "success": true,
    "balanced": "2Cu + O2 → 2CuO",
    "error": null,
    "timeMs": 2.5
  },
  {
    "input": "Sn + O2 -> SnO2",
    "success": true,
    "balanced": "Sn + O2 → SnO2",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "Pb + O2 -> PbO2",
    "success": true,
    "balanced": "Pb + O2 → PbO2",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "Mn + O2 -> MnO2",
    "success": true,
    "balanced": "Mn + O2 → MnO2",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "Cr + O2 -> Cr2O3",
    "success": true,
    "balanced": "4Cr + 3O2 → 2Cr2O3",
    "error": null,
    "timeMs": 2.9
  },
  {
    "input": "Ti + O2 -> TiO2",
    "success": true,
    "balanced": "Ti + O2 → TiO2",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "Co + O2 -> CoO",
    "success": true,
    "balanced": "2Co + O2 → 2CoO",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "Ni + O2 -> NiO",
    "success": true,
    "balanced": "2Ni + O2 → 2NiO",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "Ag + O2 -> Ag2O",
    "success": true,
    "balanced": "4Ag + O2 → 2Ag2O",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "Hg + O2 -> HgO",
    "success": true,
    "balanced": "2Hg + O2 → 2HgO",
    "error": null,
    "timeMs": 3.5
  },
  {
    "input": "V + O2 -> V2O5",
    "success": true,
    "balanced": "4V + 5O2 → 2V2O5",
    "error": null,
    "timeMs": 3.6
  },
  {
    "input": "Mo + O2 -> MoO3",
    "success": true,
    "balanced": "2Mo + 3O2 → 2MoO3",
    "error": null,
    "timeMs": 3.7
  },
  {
    "input": "Si + O2 -> SiO2",
    "success": true,
    "balanced": "Si + O2 → SiO2",
    "error": null,
    "timeMs": 3.7
  },
  {
    "input": "S8 + O2 -> SO2",
    "success": true,
    "balanced": "S8 + 8O2 → 8SO2",
    "error": null,
    "timeMs": 3.8
  },
  {
    "input": "P4 + O2 -> P4O10",
    "success": true,
    "balanced": "P4 + 5O2 → P4O10",
    "error": null,
    "timeMs": 3.9
  },
  {
    "input": "C + O2 -> CO2",
    "success": true,
    "balanced": "C + O2 → CO2",
    "error": null,
    "timeMs": 4
  },
  {
    "input": "N2 + O2 -> NO2",
    "success": true,
    "balanced": "N2 + 2O2 → 2NO2",
    "error": null,
    "timeMs": 4
  },
  {
    "input": "H2 + O2 -> H2O",
    "success": true,
    "balanced": "2H2 + O2 → 2H2O",
    "error": null,
    "timeMs": 4.2
  },
  {
    "input": "B + O2 -> B2O3",
    "success": true,
    "balanced": "4B + 3O2 → 2B2O3",
    "error": null,
    "timeMs": 4.2
  },
  {
    "input": "P4 + O2 -> P4O6",
    "success": true,
    "balanced": "P4 + 3O2 → P4O6",
    "error": null,
    "timeMs": 4.3
  },
  {
    "input": "S + O2 -> SO3",
    "success": true,
    "balanced": "2S + 3O2 → 2SO3",
    "error": null,
    "timeMs": 4.3
  },
  {
    "input": "C + O2 -> CO",
    "success": true,
    "balanced": "2C + O2 → 2CO",
    "error": null,
    "timeMs": 4.4
  },
  {
    "input": "N2 + H2 -> NH3",
    "success": true,
    "balanced": "N2 + 3H2 → 2NH3",
    "error": null,
    "timeMs": 4.4
  },
  {
    "input": "H2 + Cl2 -> HCl",
    "success": true,
    "balanced": "H2 + Cl2 → 2HCl",
    "error": null,
    "timeMs": 4.6
  },
  {
    "input": "H2 + Br2 -> HBr",
    "success": true,
    "balanced": "H2 + Br2 → 2HBr",
    "error": null,
    "timeMs": 4.6
  },
  {
    "input": "H2 + I2 -> HI",
    "success": true,
    "balanced": "H2 + I2 → 2HI",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "Na + Cl2 -> NaCl",
    "success": true,
    "balanced": "2Na + Cl2 → 2NaCl",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "Mg + Cl2 -> MgCl2",
    "success": true,
    "balanced": "Mg + Cl2 → MgCl2",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "Al + Cl2 -> AlCl3",
    "success": true,
    "balanced": "2Al + 3Cl2 → 2AlCl3",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "Fe + Cl2 -> FeCl3",
    "success": true,
    "balanced": "2Fe + 3Cl2 → 2FeCl3",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "Cu + Cl2 -> CuCl2",
    "success": true,
    "balanced": "Cu + Cl2 → CuCl2",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "Ca + F2 -> CaF2",
    "success": true,
    "balanced": "Ca + F2 → CaF2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "K + Br2 -> KBr",
    "success": true,
    "balanced": "2K + Br2 → 2KBr",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "CaO + CO2 -> CaCO3",
    "success": true,
    "balanced": "CaO + CO2 → CaCO3",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "SO3 + H2O -> H2SO4",
    "success": true,
    "balanced": "SO3 + H2O → H2SO4",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "CO2 + H2O -> H2CO3",
    "success": true,
    "balanced": "CO2 + H2O → H2CO3",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "NH3 + HCl -> NH4Cl",
    "success": true,
    "balanced": "NH3 + HCl → NH4Cl",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "HCl + NaOH -> NaCl + H2O",
    "success": true,
    "balanced": "HCl + NaOH → NaCl + H2O",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "HCl + KOH -> KCl + H2O",
    "success": true,
    "balanced": "HCl + KOH → KCl + H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "HCl + Ca(OH)2 -> CaCl + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.7
  },
  {
    "input": "HCl + Ba(OH)2 -> BaCl + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.7
  },
  {
    "input": "HCl + Mg(OH)2 -> MgCl + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.9
  },
  {
    "input": "HBr + NaOH -> NaBr + H2O",
    "success": true,
    "balanced": "HBr + NaOH → NaBr + H2O",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "HBr + KOH -> KBr + H2O",
    "success": true,
    "balanced": "HBr + KOH → KBr + H2O",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "HBr + Ca(OH)2 -> CaBr + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 2.1
  },
  {
    "input": "HBr + Ba(OH)2 -> BaBr + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 2.2
  },
  {
    "input": "HBr + Mg(OH)2 -> MgBr + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 2.3
  },
  {
    "input": "HI + NaOH -> NaI + H2O",
    "success": true,
    "balanced": "HI + NaOH → NaI + H2O",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "HI + KOH -> KI + H2O",
    "success": true,
    "balanced": "HI + KOH → KI + H2O",
    "error": null,
    "timeMs": 2.5
  },
  {
    "input": "HI + Ca(OH)2 -> CaI + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 2.6
  },
  {
    "input": "HI + Ba(OH)2 -> BaI + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 2.7
  },
  {
    "input": "HI + Mg(OH)2 -> MgI + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 2.9
  },
  {
    "input": "HNO3 + NaOH -> NaNO3 + H2O",
    "success": true,
    "balanced": "HNO3 + NaOH → NaNO3 + H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "HNO3 + KOH -> KNO3 + H2O",
    "success": true,
    "balanced": "HNO3 + KOH → KNO3 + H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "HNO3 + Ca(OH)2 -> CaNO3 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 3.3
  },
  {
    "input": "HNO3 + Ba(OH)2 -> BaNO3 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 3.4
  },
  {
    "input": "HNO3 + Mg(OH)2 -> MgNO3 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 3.4
  },
  {
    "input": "H2SO4 + NaOH -> Na2SO4 + H2O",
    "success": true,
    "balanced": "H2SO4 + 2NaOH → Na2SO4 + 2H2O",
    "error": null,
    "timeMs": 3.6
  },
  {
    "input": "H2SO4 + KOH -> K2SO4 + H2O",
    "success": true,
    "balanced": "H2SO4 + 2KOH → K2SO4 + 2H2O",
    "error": null,
    "timeMs": 3.7
  },
  {
    "input": "H2SO4 + Ca(OH)2 -> CaSO4 + H2O",
    "success": true,
    "balanced": "H2SO4 + Ca(OH)2 → CaSO4 + 2H2O",
    "error": null,
    "timeMs": 3.8
  },
  {
    "input": "H2SO4 + Ba(OH)2 -> BaSO4 + H2O",
    "success": true,
    "balanced": "H2SO4 + Ba(OH)2 → BaSO4 + 2H2O",
    "error": null,
    "timeMs": 3.8
  },
  {
    "input": "H2SO4 + Mg(OH)2 -> MgSO4 + H2O",
    "success": true,
    "balanced": "H2SO4 + Mg(OH)2 → MgSO4 + 2H2O",
    "error": null,
    "timeMs": 4
  },
  {
    "input": "HClO4 + NaOH -> NaClO4 + H2O",
    "success": true,
    "balanced": "HClO4 + NaOH → NaClO4 + H2O",
    "error": null,
    "timeMs": 4.1
  },
  {
    "input": "HClO4 + KOH -> KClO4 + H2O",
    "success": true,
    "balanced": "HClO4 + KOH → KClO4 + H2O",
    "error": null,
    "timeMs": 4.2
  },
  {
    "input": "HClO4 + Ca(OH)2 -> CaClO4 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 4.2
  },
  {
    "input": "HClO4 + Ba(OH)2 -> BaClO4 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 4.3
  },
  {
    "input": "HClO4 + Mg(OH)2 -> MgClO4 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 4.4
  },
  {
    "input": "CH3COOH + NaOH -> CH3COONa + H2O",
    "success": true,
    "balanced": "CH3COOH + NaOH → CH3COONa + H2O",
    "error": null,
    "timeMs": 4.5
  },
  {
    "input": "H2CO3 + KOH -> KHCO3 + H2O",
    "success": true,
    "balanced": "H2CO3 + KOH → KHCO3 + H2O",
    "error": null,
    "timeMs": 4.5
  },
  {
    "input": "H3PO4 + NaOH -> NaH2PO4 + H2O",
    "success": true,
    "balanced": "H3PO4 + NaOH → NaH2PO4 + H2O",
    "error": null,
    "timeMs": 4.6
  },
  {
    "input": "HF + NaOH -> NaF + H2O",
    "success": true,
    "balanced": "HF + NaOH → NaF + H2O",
    "error": null,
    "timeMs": 4.7
  },
  {
    "input": "NH3 + H2O -> NH4OH",
    "success": true,
    "balanced": "NH3 + H2O → NH4OH",
    "error": null,
    "timeMs": 4.8
  },
  {
    "input": "Zn + HCl -> ZnCl2 + H2",
    "success": true,
    "balanced": "Zn + 2HCl → ZnCl2 + H2",
    "error": null,
    "timeMs": 4.9
  },
  {
    "input": "Zn + H2SO4 -> ZnSO4 + H2",
    "success": true,
    "balanced": "Zn + H2SO4 → ZnSO4 + H2",
    "error": null,
    "timeMs": 5
  },
  {
    "input": "Zn + HNO3 -> Zn(NO3)2 + H2",
    "success": true,
    "balanced": "Zn + 2HNO3 → Zn(NO3)2 + H2",
    "error": null,
    "timeMs": 5
  },
  {
    "input": "Fe + HCl -> FeCl2 + H2",
    "success": true,
    "balanced": "Fe + 2HCl → FeCl2 + H2",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "Fe + H2SO4 -> FeSO4 + H2",
    "success": true,
    "balanced": "Fe + H2SO4 → FeSO4 + H2",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "Fe + HNO3 -> Fe(NO3)2 + H2",
    "success": true,
    "balanced": "Fe + 2HNO3 → Fe(NO3)2 + H2",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "Mg + HCl -> MgCl2 + H2",
    "success": true,
    "balanced": "Mg + 2HCl → MgCl2 + H2",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "Mg + H2SO4 -> MgSO4 + H2",
    "success": true,
    "balanced": "Mg + H2SO4 → MgSO4 + H2",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "Mg + HNO3 -> Mg(NO3)2 + H2",
    "success": true,
    "balanced": "Mg + 2HNO3 → Mg(NO3)2 + H2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "Al + HCl -> AlCl2 + H2",
    "success": true,
    "balanced": "Al + 2HCl → AlCl2 + H2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "Al + H2SO4 -> AlSO4 + H2",
    "success": true,
    "balanced": "Al + H2SO4 → AlSO4 + H2",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "Al + HNO3 -> Al(NO3)3 + H2",
    "success": true,
    "balanced": "2Al + 6HNO3 → 2Al(NO3)3 + 3H2",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "Ca + HCl -> CaCl2 + H2",
    "success": true,
    "balanced": "Ca + 2HCl → CaCl2 + H2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Ca + H2SO4 -> CaSO4 + H2",
    "success": true,
    "balanced": "Ca + H2SO4 → CaSO4 + H2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Ca + HNO3 -> Ca(NO3)2 + H2",
    "success": true,
    "balanced": "Ca + 2HNO3 → Ca(NO3)2 + H2",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "Na + HCl -> NaCl + H2",
    "success": true,
    "balanced": "2Na + 2HCl → 2NaCl + H2",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "Na + H2SO4 -> NaSO4 + H2",
    "success": true,
    "balanced": "Na + H2SO4 → NaSO4 + H2",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "Na + HNO3 -> NaNO3 + H2",
    "success": true,
    "balanced": "2Na + 2HNO3 → 2NaNO3 + H2",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "K + HCl -> KCl + H2",
    "success": true,
    "balanced": "2K + 2HCl → 2KCl + H2",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "K + H2SO4 -> KSO4 + H2",
    "success": true,
    "balanced": "K + H2SO4 → KSO4 + H2",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "K + HNO3 -> KNO3 + H2",
    "success": true,
    "balanced": "2K + 2HNO3 → 2KNO3 + H2",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "Sn + HCl -> SnCl2 + H2",
    "success": true,
    "balanced": "Sn + 2HCl → SnCl2 + H2",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "Sn + H2SO4 -> SnSO4 + H2",
    "success": true,
    "balanced": "Sn + H2SO4 → SnSO4 + H2",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Sn + HNO3 -> Sn(NO3)2 + H2",
    "success": true,
    "balanced": "Sn + 2HNO3 → Sn(NO3)2 + H2",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Pb + HCl -> PbCl2 + H2",
    "success": true,
    "balanced": "Pb + 2HCl → PbCl2 + H2",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Pb + H2SO4 -> PbSO4 + H2",
    "success": true,
    "balanced": "Pb + H2SO4 → PbSO4 + H2",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "Pb + HNO3 -> Pb(NO3)2 + H2",
    "success": true,
    "balanced": "Pb + 2HNO3 → Pb(NO3)2 + H2",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "Ni + HCl -> NiCl2 + H2",
    "success": true,
    "balanced": "Ni + 2HCl → NiCl2 + H2",
    "error": null,
    "timeMs": 2.1
  },
  {
    "input": "Ni + H2SO4 -> NiSO4 + H2",
    "success": true,
    "balanced": "Ni + H2SO4 → NiSO4 + H2",
    "error": null,
    "timeMs": 2.1
  },
  {
    "input": "Ni + HNO3 -> Ni(NO3)2 + H2",
    "success": true,
    "balanced": "Ni + 2HNO3 → Ni(NO3)2 + H2",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "Co + HCl -> CoCl2 + H2",
    "success": true,
    "balanced": "Co + 2HCl → CoCl2 + H2",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "Co + H2SO4 -> CoSO4 + H2",
    "success": true,
    "balanced": "Co + H2SO4 → CoSO4 + H2",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "Co + HNO3 -> Co(NO3)2 + H2",
    "success": true,
    "balanced": "Co + 2HNO3 → Co(NO3)2 + H2",
    "error": null,
    "timeMs": 2.5
  },
  {
    "input": "Mn + HCl -> MnCl2 + H2",
    "success": true,
    "balanced": "Mn + 2HCl → MnCl2 + H2",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "Mn + H2SO4 -> MnSO4 + H2",
    "success": true,
    "balanced": "Mn + H2SO4 → MnSO4 + H2",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "Mn + HNO3 -> Mn(NO3)2 + H2",
    "success": true,
    "balanced": "Mn + 2HNO3 → Mn(NO3)2 + H2",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "Cr + HCl -> CrCl2 + H2",
    "success": true,
    "balanced": "Cr + 2HCl → CrCl2 + H2",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "Cr + H2SO4 -> CrSO4 + H2",
    "success": true,
    "balanced": "Cr + H2SO4 → CrSO4 + H2",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "Cr + HNO3 -> Cr(NO3)2 + H2",
    "success": true,
    "balanced": "Cr + 2HNO3 → Cr(NO3)2 + H2",
    "error": null,
    "timeMs": 2.9
  },
  {
    "input": "Cu + HCl -> CuCl2 + H2",
    "success": true,
    "balanced": "Cu + 2HCl → CuCl2 + H2",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "Cu + H2SO4 -> CuSO4 + H2",
    "success": true,
    "balanced": "Cu + H2SO4 → CuSO4 + H2",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "Cu + HNO3 -> Cu(NO3)2 + H2",
    "success": true,
    "balanced": "Cu + 2HNO3 → Cu(NO3)2 + H2",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "Cl2 + KI -> KCl + I2",
    "success": true,
    "balanced": "Cl2 + 2KI → 2KCl + I2",
    "error": null,
    "timeMs": 3.2
  },
  {
    "input": "Br2 + KI -> KBr + I2",
    "success": true,
    "balanced": "Br2 + 2KI → 2KBr + I2",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "Cl2 + NaBr -> NaCl + Br2",
    "success": true,
    "balanced": "Cl2 + 2NaBr → 2NaCl + Br2",
    "error": null,
    "timeMs": 3.4
  },
  {
    "input": "Cl2 + KBr -> KCl + Br2",
    "success": true,
    "balanced": "Cl2 + 2KBr → 2KCl + Br2",
    "error": null,
    "timeMs": 3.4
  },
  {
    "input": "Br2 + NaI -> NaBr + I2",
    "success": true,
    "balanced": "Br2 + 2NaI → 2NaBr + I2",
    "error": null,
    "timeMs": 3.5
  },
  {
    "input": "I2 + NaBr -> no reaction",
    "success": false,
    "balanced": null,
    "error": "Balancing error: Parse failure for species: no reaction",
    "timeMs": 3.8
  },
  {
    "input": "F2 + KCl -> KF + Cl2",
    "success": true,
    "balanced": "F2 + 2KCl → 2KF + Cl2",
    "error": null,
    "timeMs": 4
  },
  {
    "input": "Cl2 + FeI2 -> FeCl2 + I2",
    "success": true,
    "balanced": "Cl2 + FeI2 → FeCl2 + I2",
    "error": null,
    "timeMs": 4
  },
  {
    "input": "Br2 + MgI2 -> MgBr2 + I2",
    "success": true,
    "balanced": "Br2 + MgI2 → MgBr2 + I2",
    "error": null,
    "timeMs": 4.1
  },
  {
    "input": "Cl2 + CuI -> CuCl + I2",
    "success": true,
    "balanced": "Cl2 + 2CuI → 2CuCl + I2",
    "error": null,
    "timeMs": 4.2
  },
  {
    "input": "Cl2 + 2KI -> 2KCl + I2",
    "success": true,
    "balanced": "Cl2 + 2KI → 2KCl + I2",
    "error": null,
    "timeMs": 4.3
  },
  {
    "input": "Br2 + 2NaI -> 2NaBr + I2",
    "success": true,
    "balanced": "Br2 + 2NaI → 2NaBr + I2",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "AgNO3 + NaCl -> AgCl + NaNO3",
    "success": true,
    "balanced": "AgNO3 + NaCl → AgCl + NaNO3",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "AgNO3 + KCl -> AgCl + KNO3",
    "success": true,
    "balanced": "AgNO3 + KCl → AgCl + KNO3",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "AgNO3 + NH4Cl -> AgCl + NH4NO3",
    "success": true,
    "balanced": "AgNO3 + NH4Cl → AgCl + NH4NO3",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "Pb(NO3)2 + KI -> PbI2 + KNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + 2KI → PbI2 + 2KNO3",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "BaCl2 + Na2SO4 -> BaSO4 + NaCl",
    "success": true,
    "balanced": "BaCl2 + Na2SO4 → BaSO4 + 2NaCl",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "CaCl2 + Na2CO3 -> CaCO3 + NaCl",
    "success": true,
    "balanced": "CaCl2 + Na2CO3 → CaCO3 + 2NaCl",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "CaCl2 + Na3PO4 -> Ca3(PO4)2 + NaCl",
    "success": true,
    "balanced": "3CaCl2 + 2Na3PO4 → Ca3(PO4)2 + 6NaCl",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "SrCl2 + Na2SO4 -> SrSO4 + NaCl",
    "success": true,
    "balanced": "SrCl2 + Na2SO4 → SrSO4 + 2NaCl",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "AgNO3 + NaBr -> AgBr + NaNO3",
    "success": true,
    "balanced": "AgNO3 + NaBr → AgBr + NaNO3",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "AgNO3 + NaI -> AgI + NaNO3",
    "success": true,
    "balanced": "AgNO3 + NaI → AgI + NaNO3",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "Hg2(NO3)2 + NaCl -> Hg2Cl2 + NaNO3",
    "success": true,
    "balanced": "Hg2(NO3)2 + 2NaCl → Hg2Cl2 + 2NaNO3",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Pb(NO3)2 + Na2SO4 -> PbSO4 + NaNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + Na2SO4 → PbSO4 + 2NaNO3",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "Pb(NO3)2 + NaCl -> PbCl2 + NaNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + 2NaCl → PbCl2 + 2NaNO3",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "Ba(NO3)2 + K2SO4 -> BaSO4 + KNO3",
    "success": true,
    "balanced": "Ba(NO3)2 + K2SO4 → BaSO4 + 2KNO3",
    "error": null,
    "timeMs": 2.2
  },
  {
    "input": "Ca(NO3)2 + Na2C2O4 -> CaC2O4 + NaNO3",
    "success": true,
    "balanced": "Ca(NO3)2 + Na2C2O4 → CaC2O4 + 2NaNO3",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "FeCl3 + NaOH -> Fe(OH)3 + NaCl",
    "success": true,
    "balanced": "FeCl3 + 3NaOH → Fe(OH)3 + 3NaCl",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "AlCl3 + NaOH -> Al(OH)3 + NaCl",
    "success": true,
    "balanced": "AlCl3 + 3NaOH → Al(OH)3 + 3NaCl",
    "error": null,
    "timeMs": 2.5
  },
  {
    "input": "ZnCl2 + Na2S -> ZnS + NaCl",
    "success": true,
    "balanced": "ZnCl2 + Na2S → ZnS + 2NaCl",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "CuSO4 + NaOH -> Cu(OH)2 + Na2SO4",
    "success": true,
    "balanced": "CuSO4 + 2NaOH → Cu(OH)2 + Na2SO4",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "NiSO4 + Na2CO3 -> NiCO3 + Na2SO4",
    "success": true,
    "balanced": "NiSO4 + Na2CO3 → NiCO3 + Na2SO4",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "CoSO4 + Na2CO3 -> CoCO3 + Na2SO4",
    "success": true,
    "balanced": "CoSO4 + Na2CO3 → CoCO3 + Na2SO4",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "FeSO4 + Na2CO3 -> FeCO3 + Na2SO4",
    "success": true,
    "balanced": "FeSO4 + Na2CO3 → FeCO3 + Na2SO4",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "FeCl2 + Na2S -> FeS + NaCl",
    "success": true,
    "balanced": "FeCl2 + Na2S → FeS + 2NaCl",
    "error": null,
    "timeMs": 3.2
  },
  {
    "input": "MnCl2 + Na2CO3 -> MnCO3 + NaCl",
    "success": true,
    "balanced": "MnCl2 + Na2CO3 → MnCO3 + 2NaCl",
    "error": null,
    "timeMs": 3.4
  },
  {
    "input": "MgCl2 + Na2CO3 -> MgCO3 + NaCl",
    "success": true,
    "balanced": "MgCl2 + Na2CO3 → MgCO3 + 2NaCl",
    "error": null,
    "timeMs": 3.4
  },
  {
    "input": "CaCl2 + Na2SO3 -> CaSO3 + NaCl",
    "success": true,
    "balanced": "CaCl2 + Na2SO3 → CaSO3 + 2NaCl",
    "error": null,
    "timeMs": 3.6
  },
  {
    "input": "BaCl2 + Na2SO3 -> BaSO3 + NaCl",
    "success": true,
    "balanced": "BaCl2 + Na2SO3 → BaSO3 + 2NaCl",
    "error": null,
    "timeMs": 3.6
  },
  {
    "input": "AgNO3 + Na2CO3 -> Ag2CO3 + NaNO3",
    "success": true,
    "balanced": "2AgNO3 + Na2CO3 → Ag2CO3 + 2NaNO3",
    "error": null,
    "timeMs": 3.8
  },
  {
    "input": "AgNO3 + Na2SO4 -> Ag2SO4 + NaNO3",
    "success": true,
    "balanced": "2AgNO3 + Na2SO4 → Ag2SO4 + 2NaNO3",
    "error": null,
    "timeMs": 4
  },
  {
    "input": "AgNO3 + Na2S -> Ag2S + NaNO3",
    "success": true,
    "balanced": "2AgNO3 + Na2S → Ag2S + 2NaNO3",
    "error": null,
    "timeMs": 4.1
  },
  {
    "input": "Pb(NO3)2 + Na2CO3 -> PbCO3 + NaNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + Na2CO3 → PbCO3 + 2NaNO3",
    "error": null,
    "timeMs": 4.1
  },
  {
    "input": "Pb(NO3)2 + Na2S -> PbS + NaNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + Na2S → PbS + 2NaNO3",
    "error": null,
    "timeMs": 4.2
  },
  {
    "input": "Pb(NO3)2 + NaF -> PbF2 + NaNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + 2NaF → PbF2 + 2NaNO3",
    "error": null,
    "timeMs": 4.3
  },
  {
    "input": "Ca(NO3)2 + NaF -> CaF2 + NaNO3",
    "success": true,
    "balanced": "Ca(NO3)2 + 2NaF → CaF2 + 2NaNO3",
    "error": null,
    "timeMs": 4.4
  },
  {
    "input": "Sr(NO3)2 + NaF -> SrF2 + NaNO3",
    "success": true,
    "balanced": "Sr(NO3)2 + 2NaF → SrF2 + 2NaNO3",
    "error": null,
    "timeMs": 4.5
  },
  {
    "input": "Ba(NO3)2 + NaF -> BaF2 + NaNO3",
    "success": true,
    "balanced": "Ba(NO3)2 + 2NaF → BaF2 + 2NaNO3",
    "error": null,
    "timeMs": 4.6
  },
  {
    "input": "FeCl3 + Na3PO4 -> FePO4 + NaCl",
    "success": true,
    "balanced": "FeCl3 + Na3PO4 → FePO4 + 3NaCl",
    "error": null,
    "timeMs": 4.7
  },
  {
    "input": "AlCl3 + Na3PO4 -> AlPO4 + NaCl",
    "success": true,
    "balanced": "AlCl3 + Na3PO4 → AlPO4 + 3NaCl",
    "error": null,
    "timeMs": 4.8
  },
  {
    "input": "CuCl2 + Na3PO4 -> Cu3(PO4)2 + NaCl",
    "success": true,
    "balanced": "3CuCl2 + 2Na3PO4 → Cu3(PO4)2 + 6NaCl",
    "error": null,
    "timeMs": 4.9
  },
  {
    "input": "ZnCl2 + Na3PO4 -> Zn3(PO4)2 + NaCl",
    "success": true,
    "balanced": "3ZnCl2 + 2Na3PO4 → Zn3(PO4)2 + 6NaCl",
    "error": null,
    "timeMs": 5
  },
  {
    "input": "NiCl2 + Na3PO4 -> Ni3(PO4)2 + NaCl",
    "success": true,
    "balanced": "3NiCl2 + 2Na3PO4 → Ni3(PO4)2 + 6NaCl",
    "error": null,
    "timeMs": 5.1
  },
  {
    "input": "CoCl2 + Na3PO4 -> Co3(PO4)2 + NaCl",
    "success": true,
    "balanced": "3CoCl2 + 2Na3PO4 → Co3(PO4)2 + 6NaCl",
    "error": null,
    "timeMs": 5.2
  },
  {
    "input": "MnCl2 + Na3PO4 -> Mn3(PO4)2 + NaCl",
    "success": true,
    "balanced": "3MnCl2 + 2Na3PO4 → Mn3(PO4)2 + 6NaCl",
    "error": null,
    "timeMs": 5.3
  },
  {
    "input": "MgSO4 + NaOH -> Mg(OH)2 + Na2SO4",
    "success": true,
    "balanced": "MgSO4 + 2NaOH → Mg(OH)2 + Na2SO4",
    "error": null,
    "timeMs": 9.7
  },
  {
    "input": "Ca(NO3)2 + Na2SO4 -> no reaction",
    "success": false,
    "balanced": null,
    "error": "Balancing error: Parse failure for species: no reaction",
    "timeMs": 9.8
  },
  {
    "input": "Na2SO4 + BaCl2 -> BaSO4 + NaCl",
    "success": true,
    "balanced": "Na2SO4 + BaCl2 → BaSO4 + 2NaCl",
    "error": null,
    "timeMs": 9.9
  },
  {
    "input": "K2SO4 + BaCl2 -> BaSO4 + KCl",
    "success": true,
    "balanced": "K2SO4 + BaCl2 → BaSO4 + 2KCl",
    "error": null,
    "timeMs": 10
  },
  {
    "input": "NH4Cl + AgNO3 -> AgCl + NH4NO3",
    "success": true,
    "balanced": "NH4Cl + AgNO3 → AgCl + NH4NO3",
    "error": null,
    "timeMs": 10
  },
  {
    "input": "Na2HPO4 + CaCl2 -> CaHPO4 + NaCl",
    "success": true,
    "balanced": "Na2HPO4 + CaCl2 → CaHPO4 + 2NaCl",
    "error": null,
    "timeMs": 10.1
  },
  {
    "input": "NaH2PO4 + CaCl2 -> CaHPO4 + NaCl",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 0.1
  },
  {
    "input": "Na2CrO4 + BaCl2 -> BaCrO4 + NaCl",
    "success": true,
    "balanced": "Na2CrO4 + BaCl2 → BaCrO4 + 2NaCl",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "K2Cr2O7 + BaCl2 -> BaCrO4 + KCl",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 0.2
  },
  {
    "input": "Na2C2O4 + CaCl2 -> CaC2O4 + NaCl",
    "success": true,
    "balanced": "Na2C2O4 + CaCl2 → CaC2O4 + 2NaCl",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "Na2C2O4 + BaCl2 -> BaC2O4 + NaCl",
    "success": true,
    "balanced": "Na2C2O4 + BaCl2 → BaC2O4 + 2NaCl",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "Na2C2O4 + SrCl2 -> SrC2O4 + NaCl",
    "success": true,
    "balanced": "Na2C2O4 + SrCl2 → SrC2O4 + 2NaCl",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "Na2CO3 + SrCl2 -> SrCO3 + NaCl",
    "success": true,
    "balanced": "Na2CO3 + SrCl2 → SrCO3 + 2NaCl",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "Na2CO3 + BaCl2 -> BaCO3 + NaCl",
    "success": true,
    "balanced": "Na2CO3 + BaCl2 → BaCO3 + 2NaCl",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "Na2CO3 + Pb(NO3)2 -> PbCO3 + NaNO3",
    "success": true,
    "balanced": "Na2CO3 + Pb(NO3)2 → PbCO3 + 2NaNO3",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "CaCO3 -> CaO + CO2",
    "success": true,
    "balanced": "CaCO3 → CaO + CO2",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "MgCO3 -> MgO + CO2",
    "success": true,
    "balanced": "MgCO3 → MgO + CO2",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "ZnCO3 -> ZnO + CO2",
    "success": true,
    "balanced": "ZnCO3 → ZnO + CO2",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "CuCO3 -> CuO + CO2",
    "success": true,
    "balanced": "CuCO3 → CuO + CO2",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "FeCO3 -> FeO + CO2",
    "success": true,
    "balanced": "FeCO3 → FeO + CO2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "PbCO3 -> PbO + CO2",
    "success": true,
    "balanced": "PbCO3 → PbO + CO2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "MnCO3 -> MnO + CO2",
    "success": true,
    "balanced": "MnCO3 → MnO + CO2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "NiCO3 -> NiO + CO2",
    "success": true,
    "balanced": "NiCO3 → NiO + CO2",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "CoCO3 -> CoO + CO2",
    "success": true,
    "balanced": "CoCO3 → CoO + CO2",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "Ag2CO3 -> Ag2O + CO2",
    "success": true,
    "balanced": "Ag2CO3 → Ag2O + CO2",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "Na2CO3 -> Na2O + CO2",
    "success": true,
    "balanced": "Na2CO3 → Na2O + CO2",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "K2CO3 -> K2O + CO2",
    "success": true,
    "balanced": "K2CO3 → K2O + CO2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Li2CO3 -> Li2O + CO2",
    "success": true,
    "balanced": "Li2CO3 → Li2O + CO2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "BaCO3 -> BaO + CO2",
    "success": true,
    "balanced": "BaCO3 → BaO + CO2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "SrCO3 -> SrO + CO2",
    "success": true,
    "balanced": "SrCO3 → SrO + CO2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Al2(CO3)3 -> Al2(O)3 + CO2",
    "success": true,
    "balanced": "Al2(CO3)3 → Al2(O)3 + 3CO2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "NH4HCO3 -> NH4HO + CO2",
    "success": true,
    "balanced": "NH4HCO3 → NH4HO + CO2",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "KHCO3 -> KHO + CO2",
    "success": true,
    "balanced": "KHCO3 → KHO + CO2",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "NaHCO3 -> NaHO + CO2",
    "success": true,
    "balanced": "NaHCO3 → NaHO + CO2",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "(NH4)2CO3 -> (NH4)2O + CO2",
    "success": true,
    "balanced": "(NH4)2CO3 → (NH4)2O + CO2",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "Ca(OH)2 -> CaO + H2O",
    "success": true,
    "balanced": "Ca(OH)2 → CaO + H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "Mg(OH)2 -> MgO + H2O",
    "success": true,
    "balanced": "Mg(OH)2 → MgO + H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "Al(OH)3 -> Al2O3 + H2O",
    "success": true,
    "balanced": "2Al(OH)3 → Al2O3 + 3H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "Fe(OH)3 -> Fe2O3 + H2O",
    "success": true,
    "balanced": "2Fe(OH)3 → Fe2O3 + 3H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "Cu(OH)2 -> CuO + H2O",
    "success": true,
    "balanced": "Cu(OH)2 → CuO + H2O",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "Zn(OH)2 -> ZnO + H2O",
    "success": true,
    "balanced": "Zn(OH)2 → ZnO + H2O",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "Ni(OH)2 -> NiO + H2O",
    "success": true,
    "balanced": "Ni(OH)2 → NiO + H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "Co(OH)2 -> CoO + H2O",
    "success": true,
    "balanced": "Co(OH)2 → CoO + H2O",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "Mn(OH)2 -> MnO + H2O",
    "success": true,
    "balanced": "Mn(OH)2 → MnO + H2O",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "Cr(OH)3 -> Cr2O3 + H2O",
    "success": true,
    "balanced": "2Cr(OH)3 → Cr2O3 + 3H2O",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "Pb(OH)2 -> PbO + H2O",
    "success": true,
    "balanced": "Pb(OH)2 → PbO + H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Ba(OH)2 -> BaO + H2O",
    "success": true,
    "balanced": "Ba(OH)2 → BaO + H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Sr(OH)2 -> SrO + H2O",
    "success": true,
    "balanced": "Sr(OH)2 → SrO + H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Hg(OH)2 -> HgO + H2O",
    "success": true,
    "balanced": "Hg(OH)2 → HgO + H2O",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "Sn(OH)2 -> SnO2 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.9
  },
  {
    "input": "KClO3 -> KCl + O2",
    "success": true,
    "balanced": "2KClO3 → 2KCl + 3O2",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "NaClO3 -> NaCl + O2",
    "success": true,
    "balanced": "2NaClO3 → 2NaCl + 3O2",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "Ca(ClO3)2 -> Ca(Cl)2 + O2",
    "success": true,
    "balanced": "Ca(ClO3)2 → Ca(Cl)2 + 3O2",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "Ba(ClO3)2 -> Ba(Cl)2 + O2",
    "success": true,
    "balanced": "Ba(ClO3)2 → Ba(Cl)2 + 3O2",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "Sr(ClO3)2 -> Sr(Cl)2 + O2",
    "success": true,
    "balanced": "Sr(ClO3)2 → Sr(Cl)2 + 3O2",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "Mg(ClO3)2 -> Mg(Cl)2 + O2",
    "success": true,
    "balanced": "Mg(ClO3)2 → Mg(Cl)2 + 3O2",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "LiClO3 -> LiCl + O2",
    "success": true,
    "balanced": "2LiClO3 → 2LiCl + 3O2",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "Zn(ClO3)2 -> Zn(Cl)2 + O2",
    "success": true,
    "balanced": "Zn(ClO3)2 → Zn(Cl)2 + 3O2",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "Cu(NO3)2 -> CuO + NO2 + O2",
    "success": true,
    "balanced": "2Cu(NO3)2 → 2CuO + 4NO2 + O2",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "Pb(NO3)2 -> PbO + NO2 + O2",
    "success": true,
    "balanced": "2Pb(NO3)2 → 2PbO + 4NO2 + O2",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "Zn(NO3)2 -> ZnO + NO2 + O2",
    "success": true,
    "balanced": "2Zn(NO3)2 → 2ZnO + 4NO2 + O2",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "Ca(NO3)2 -> CaO + NO2 + O2",
    "success": true,
    "balanced": "2Ca(NO3)2 → 2CaO + 4NO2 + O2",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "Ba(NO3)2 -> BaO + NO2 + O2",
    "success": true,
    "balanced": "2Ba(NO3)2 → 2BaO + 4NO2 + O2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "AgNO3 -> AgNOO + NO2 + O2",
    "success": false,
    "balanced": null,
    "error": "Could not find integer solution.",
    "timeMs": 0.9
  },
  {
    "input": "Hg(NO3)2 -> HgO + NO2 + O2",
    "success": true,
    "balanced": "2Hg(NO3)2 → 2HgO + 4NO2 + O2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Co(NO3)2 -> CoO + NO2 + O2",
    "success": true,
    "balanced": "2Co(NO3)2 → 2CoO + 4NO2 + O2",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Ni(NO3)2 -> NiO + NO2 + O2",
    "success": true,
    "balanced": "2Ni(NO3)2 → 2NiO + 4NO2 + O2",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "Fe(NO3)3 -> FeO + NO2 + O2",
    "success": true,
    "balanced": "Fe(NO3)3 → FeO + 3NO2 + O2",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "Al(NO3)3 -> AlO + NO2 + O2",
    "success": true,
    "balanced": "Al(NO3)3 → AlO + 3NO2 + O2",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "Mg(NO3)2 -> MgO + NO2 + O2",
    "success": true,
    "balanced": "2Mg(NO3)2 → 2MgO + 4NO2 + O2",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "Sr(NO3)2 -> SrO + NO2 + O2",
    "success": true,
    "balanced": "2Sr(NO3)2 → 2SrO + 4NO2 + O2",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "NaNO3 -> NaNO2 + O2",
    "success": true,
    "balanced": "2NaNO3 → 2NaNO2 + O2",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "KNO3 -> KNO2 + O2",
    "success": true,
    "balanced": "2KNO3 → 2KNO2 + O2",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "NH4NO3 -> N2O + H2O",
    "success": true,
    "balanced": "NH4NO3 → N2O + 2H2O",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "LiNO3 -> LiNOO + NO2 + O2",
    "success": false,
    "balanced": null,
    "error": "Could not find integer solution.",
    "timeMs": 1.4
  },
  {
    "input": "Mn(NO3)2 -> MnO + NO2 + O2",
    "success": true,
    "balanced": "2Mn(NO3)2 → 2MnO + 4NO2 + O2",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "Cr(NO3)3 -> CrO + NO2 + O2",
    "success": true,
    "balanced": "Cr(NO3)3 → CrO + 3NO2 + O2",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "Bi(NO3)3 -> BiO + NO2 + O2",
    "success": true,
    "balanced": "Bi(NO3)3 → BiO + 3NO2 + O2",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "NH3 + O2 -> NO + H2O",
    "success": true,
    "balanced": "4NH3 + 5O2 → 4NO + 6H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "NO + O2 -> NO2",
    "success": true,
    "balanced": "2NO + O2 → 2NO2",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "NO2 + H2O -> HNO3 + NO",
    "success": true,
    "balanced": "3NO2 + H2O → 2HNO3 + NO",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "S + O2 -> SO2",
    "success": true,
    "balanced": "S + O2 → SO2",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "SO2 + O2 -> SO3",
    "success": true,
    "balanced": "2SO2 + O2 → 2SO3",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "CaCO3 + SiO2 -> CaSiO3 + CO2",
    "success": true,
    "balanced": "CaCO3 + SiO2 → CaSiO3 + CO2",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "CO + H2 -> CH3OH",
    "success": true,
    "balanced": "CO + 2H2 → CH3OH",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "CO2 + H2 -> HCOOH",
    "success": true,
    "balanced": "CO2 + H2 → HCOOH",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "C2H4 + H2O -> C2H5OH",
    "success": true,
    "balanced": "C2H4 + H2O → C2H5OH",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "C2H4 + H2 -> C2H6",
    "success": true,
    "balanced": "C2H4 + H2 → C2H6",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "C3H6 + HCl -> C3H7Cl",
    "success": true,
    "balanced": "C3H6 + HCl → C3H7Cl",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "CH2=CHCl + NaOH -> CH2=CHOH + NaCl",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 2.1
  },
  {
    "input": "C6H6 + Cl2 -> C6H5Cl + HCl",
    "success": true,
    "balanced": "C6H6 + Cl2 → C6H5Cl + HCl",
    "error": null,
    "timeMs": 2.1
  },
  {
    "input": "C6H6 + HNO3 -> C6H5NO2 + H2O",
    "success": true,
    "balanced": "C6H6 + HNO3 → C6H5NO2 + H2O",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "C6H6 + CH3Cl -> C6H5CH3 + HCl",
    "success": true,
    "balanced": "C6H6 + CH3Cl → C6H5CH3 + HCl",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "2CO + O2 -> 2CO2",
    "success": true,
    "balanced": "2CO + O2 → 2CO2",
    "error": null,
    "timeMs": 2.4
  },
  {
    "input": "2SO2 + O2 -> 2SO3",
    "success": true,
    "balanced": "2SO2 + O2 → 2SO3",
    "error": null,
    "timeMs": 2.5
  },
  {
    "input": "C2H4 + Br2 -> C2H4Br2",
    "success": true,
    "balanced": "C2H4 + Br2 → C2H4Br2",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C2H4 + HBr -> C2H5Br",
    "success": true,
    "balanced": "C2H4 + HBr → C2H5Br",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C3H6 + Br2 -> C3H6Br2",
    "success": true,
    "balanced": "C3H6 + Br2 → C3H6Br2",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C3H6 + HBr -> C3H7Br",
    "success": true,
    "balanced": "C3H6 + HBr → C3H7Br",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C3H6 + H2O -> C3H7OH",
    "success": true,
    "balanced": "C3H6 + H2O → C3H7OH",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "C3H6 + H2 -> C3H8",
    "success": true,
    "balanced": "C3H6 + H2 → C3H8",
    "error": null,
    "timeMs": 2.7
  },
  {
    "input": "C4H8 + H2 -> C4H10",
    "success": true,
    "balanced": "C4H8 + H2 → C4H10",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C4H8 + HBr -> C4H9Br",
    "success": true,
    "balanced": "C4H8 + HBr → C4H9Br",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C2H2 + Br2 -> C2H2Br2",
    "success": true,
    "balanced": "C2H2 + Br2 → C2H2Br2",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C2H2 + H2 -> C2H4",
    "success": true,
    "balanced": "C2H2 + H2 → C2H4",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C2H2 + HCl -> CH2=CHCl",
    "success": true,
    "balanced": "C2H2 + HCl → CH2=CHCl",
    "error": null,
    "timeMs": 2.8
  },
  {
    "input": "C6H5CH3 + Cl2 -> C6H4CH3Cl + HCl",
    "success": true,
    "balanced": "C6H5CH3 + Cl2 → C6H4CH3Cl + HCl",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "CH3CH2OH -> CH2=CH2 + H2O",
    "success": true,
    "balanced": "CH3CH2OH → CH2=CH2 + H2O",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "C3H7OH -> C3H6 + H2O",
    "success": true,
    "balanced": "C3H7OH → C3H6 + H2O",
    "error": null,
    "timeMs": 0.2
  },
  {
    "input": "C2H5OH + HCl -> C2H5Cl + H2O",
    "success": true,
    "balanced": "C2H5OH + HCl → C2H5Cl + H2O",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "C2H5OH + Na -> C2H5ONa + H2",
    "success": true,
    "balanced": "2C2H5OH + 2Na → 2C2H5ONa + H2",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "CH3COOH + C2H5OH -> CH3COOC2H5 + H2O",
    "success": true,
    "balanced": "CH3COOH + C2H5OH → CH3COOC2H5 + H2O",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "CH3CHO + H2 -> CH3CH2OH",
    "success": true,
    "balanced": "CH3CHO + H2 → CH3CH2OH",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "CH2=CH2 + Cl2 -> CH2ClCH2Cl",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 0.6
  },
  {
    "input": "CH2=CH2 + HBr -> CH3CH2Br",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 0.6
  },
  {
    "input": "CH2=CH2 + H2O -> CH3CH2OH",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 0.7
  },
  {
    "input": "CH2=CH2 + KMnO4 -> HOCH2CH2OH",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 0.8
  },
  {
    "input": "CH2=CH2 + O3 -> CH2O + CH2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 0.9
  },
  {
    "input": "CH3CH=CH2 + HBr -> CH3CHBrCH3",
    "success": false,
    "balanced": null,
    "error": "Could not find integer solution.",
    "timeMs": 1
  },
  {
    "input": "CH3CH=CH2 + H2O -> CH3CH(OH)CH3",
    "success": false,
    "balanced": null,
    "error": "Could not find integer solution.",
    "timeMs": 1.1
  },
  {
    "input": "CH3CH=CH2 + H2 -> CH3CH2CH3",
    "success": false,
    "balanced": null,
    "error": "Could not find integer solution.",
    "timeMs": 1.2
  },
  {
    "input": "C6H6 + 3H2 -> C6H12",
    "success": true,
    "balanced": "C6H6 + 3H2 → C6H12",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "6CO2 + 6H2O -> C6H12O6 + O2",
    "success": true,
    "balanced": "6CO2 + 6H2O → C6H12O6 + 6O2",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "C6H12O6 + O2 -> CO2 + H2O",
    "success": true,
    "balanced": "C6H12O6 + 6O2 → 6CO2 + 6H2O",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "Ca(OH)2 + CO2 -> CaCO3 + H2O",
    "success": true,
    "balanced": "Ca(OH)2 + CO2 → CaCO3 + H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "NH3 + CO2 -> (NH2)2CO + H2O",
    "success": true,
    "balanced": "2NH3 + CO2 → (NH2)2CO + H2O",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "NO2 + H2O -> HNO3 + HNO2",
    "success": true,
    "balanced": "2NO2 + H2O → HNO3 + HNO2",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "SO2 + H2O -> H2SO3",
    "success": true,
    "balanced": "SO2 + H2O → H2SO3",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "2NO2 -> 2NO + O2",
    "success": true,
    "balanced": "2NO2 → 2NO + O2",
    "error": null,
    "timeMs": 1.7
  },
  {
    "input": "2O3 -> 3O2",
    "success": true,
    "balanced": "2O3 → 3O2",
    "error": null,
    "timeMs": 1.8
  },
  {
    "input": "CO + 1/2O2 -> CO2",
    "success": true,
    "balanced": "2CO + /2O2 → 2CO2",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "H2 + 1/2O2 -> H2O",
    "success": true,
    "balanced": "2H2 + /2O2 → 2H2O",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "MnO4- + Fe2+ -> Mn2+ + Fe3+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: MnO-, Fe+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.1
  },
  {
    "input": "Cr2O7^2- + Fe2+ -> Cr3+ + Fe3+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Cr2O7-, Fe+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.1
  },
  {
    "input": "MnO4- + I- -> Mn2+ + I2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: MnO-, I-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "MnO4- + C2O4^2- -> Mn2+ + CO2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: MnO-, C2O4-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "Cr2O7^2- + H2S -> Cr3+ + S",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Cr2O7-, Cr+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "Cl2 + I- -> Cl- + I2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: I-, Cl-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "Br2 + I- -> Br- + I2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: I-, Br-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "Cl2 + Fe2+ -> Cl- + Fe3+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Fe+, Cl-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "MnO4- + SO3^2- -> Mn2+ + SO4^2-",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: MnO-, SO3-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "MnO4- + H2O2 -> Mn2+ + O2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: MnO-, Mn+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.2
  },
  {
    "input": "Cr2O7^2- + H2O2 -> Cr3+ + O2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Cr2O7-, Cr+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.3
  },
  {
    "input": "I2 + S2O3^2- -> I- + S4O6^2-",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: S2O3-, I-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.3
  },
  {
    "input": "H2O2 -> H2O + O2",
    "success": true,
    "balanced": "2H2O2 → 2H2O + O2",
    "error": null,
    "timeMs": 2.3
  },
  {
    "input": "NO3- + Cu -> NO + Cu2+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: NO-, Cu+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.3
  },
  {
    "input": "NO3- + Zn -> NO2 + Zn2+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: NO-, Zn+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.3
  },
  {
    "input": "ClO- + I- -> Cl- + I2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: ClO-, I-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.3
  },
  {
    "input": "ClO3- + I- -> Cl- + I2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: ClO-, I-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.3
  },
  {
    "input": "Ce4+ + Fe2+ -> Ce3+ + Fe3+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Ce+, Fe+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.4
  },
  {
    "input": "Ag+ + Cu -> Ag + Cu2+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Ag+, Cu+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.4
  },
  {
    "input": "Hg2^2+ + 2Cl- -> Hg2Cl2",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Hg2+, Cl-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.4
  },
  {
    "input": "O2 + H2S -> S + H2O",
    "success": true,
    "balanced": "O2 + 2H2S → 2S + 2H2O",
    "error": null,
    "timeMs": 2.5
  },
  {
    "input": "S2- + O2 -> S + O2-",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: S-, O-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.5
  },
  {
    "input": "Fe2+ + S2O8^2- -> Fe3+ + SO4^2-",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Fe+, S2O8-. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.5
  },
  {
    "input": "Sn2+ + Fe3+ -> Sn4+ + Fe2+",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Sn+, Fe+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 2.5
  },
  {
    "input": "Zn + Cu2+ -> Zn2+ + Cu",
    "success": false,
    "balanced": null,
    "error": "Charges aren't supported in Standard mode. Found: Cu+, Zn+. Switch to Redox mode to balance ionic equations.",
    "timeMs": 0.1
  },
  {
    "input": "HNO3 + Ca(OH)2 -> Ca(NO3)2 + H2O",
    "success": true,
    "balanced": "2HNO3 + Ca(OH)2 → Ca(NO3)2 + 2H2O",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "HCl + Ca(OH)2 -> CaCl2 + H2O",
    "success": true,
    "balanced": "2HCl + Ca(OH)2 → CaCl2 + 2H2O",
    "error": null,
    "timeMs": 0.3
  },
  {
    "input": "H3PO4 + KOH -> KH2PO4 + H2O",
    "success": true,
    "balanced": "H3PO4 + KOH → KH2PO4 + H2O",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "H3PO4 + Ca(OH)2 -> CaHPO4 + H2O",
    "success": true,
    "balanced": "H3PO4 + Ca(OH)2 → CaHPO4 + 2H2O",
    "error": null,
    "timeMs": 0.4
  },
  {
    "input": "H2CO3 + NaOH -> NaHCO3 + H2O",
    "success": true,
    "balanced": "H2CO3 + NaOH → NaHCO3 + H2O",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "H2CO3 + Ca(OH)2 -> CaCO3 + H2O",
    "success": true,
    "balanced": "H2CO3 + Ca(OH)2 → CaCO3 + 2H2O",
    "error": null,
    "timeMs": 0.5
  },
  {
    "input": "Al + HCl -> AlCl3 + H2",
    "success": true,
    "balanced": "2Al + 6HCl → 2AlCl3 + 3H2",
    "error": null,
    "timeMs": 0.6
  },
  {
    "input": "Na + H2O -> NaOH + H2",
    "success": true,
    "balanced": "2Na + 2H2O → 2NaOH + H2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "K + H2O -> KOH + H2",
    "success": true,
    "balanced": "2K + 2H2O → 2KOH + H2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "Ca + H2O -> Ca(OH)2 + H2",
    "success": true,
    "balanced": "Ca + 2H2O → Ca(OH)2 + H2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "Mg + H2O -> Mg(OH)2 + H2",
    "success": true,
    "balanced": "Mg + 2H2O → Mg(OH)2 + H2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "Fe + H2O -> Fe(OH)2 + H2",
    "success": true,
    "balanced": "Fe + 2H2O → Fe(OH)2 + H2",
    "error": null,
    "timeMs": 0.7
  },
  {
    "input": "AgNO3 + KBr -> AgBr + KNO3",
    "success": true,
    "balanced": "AgNO3 + KBr → AgBr + KNO3",
    "error": null,
    "timeMs": 0.8
  },
  {
    "input": "AgNO3 + NH4Br -> AgBr + NH4NO3",
    "success": true,
    "balanced": "AgNO3 + NH4Br → AgBr + NH4NO3",
    "error": null,
    "timeMs": 0.9
  },
  {
    "input": "AgNO3 + NH4I -> AgI + NH4NO3",
    "success": true,
    "balanced": "AgNO3 + NH4I → AgI + NH4NO3",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Pb(NO3)2 + NaBr -> PbBr2 + NaNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + 2NaBr → PbBr2 + 2NaNO3",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Pb(NO3)2 + NaI -> PbI2 + NaNO3",
    "success": true,
    "balanced": "Pb(NO3)2 + 2NaI → PbI2 + 2NaNO3",
    "error": null,
    "timeMs": 1
  },
  {
    "input": "Ca(NO3)2 + Na2SO4 -> CaSO4 + NaNO3",
    "success": true,
    "balanced": "Ca(NO3)2 + Na2SO4 → CaSO4 + 2NaNO3",
    "error": null,
    "timeMs": 1.1
  },
  {
    "input": "Ba(NO3)2 + Na2CO3 -> BaCO3 + NaNO3",
    "success": true,
    "balanced": "Ba(NO3)2 + Na2CO3 → BaCO3 + 2NaNO3",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "Sr(NO3)2 + Na2CO3 -> SrCO3 + NaNO3",
    "success": true,
    "balanced": "Sr(NO3)2 + Na2CO3 → SrCO3 + 2NaNO3",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "FeCl2 + NaOH -> Fe(OH)2 + NaCl",
    "success": true,
    "balanced": "FeCl2 + 2NaOH → Fe(OH)2 + 2NaCl",
    "error": null,
    "timeMs": 1.2
  },
  {
    "input": "FeCl3 + Na2CO3 -> FeCO3 + NaCl",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.2
  },
  {
    "input": "AlCl3 + Na2CO3 -> Al2(CO3)3 + NaCl",
    "success": true,
    "balanced": "2AlCl3 + 3Na2CO3 → Al2(CO3)3 + 6NaCl",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "CuCl2 + Na2S -> CuS + NaCl",
    "success": true,
    "balanced": "CuCl2 + Na2S → CuS + 2NaCl",
    "error": null,
    "timeMs": 1.3
  },
  {
    "input": "NiCl2 + Na2S -> NiS + NaCl",
    "success": true,
    "balanced": "NiCl2 + Na2S → NiS + 2NaCl",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "CoCl2 + Na2S -> CoS + NaCl",
    "success": true,
    "balanced": "CoCl2 + Na2S → CoS + 2NaCl",
    "error": null,
    "timeMs": 1.4
  },
  {
    "input": "NaHCO3 -> Na2CO3 + CO2 + H2O",
    "success": true,
    "balanced": "2NaHCO3 → Na2CO3 + CO2 + H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "KHCO3 -> K2CO3 + CO2 + H2O",
    "success": true,
    "balanced": "2KHCO3 → K2CO3 + CO2 + H2O",
    "error": null,
    "timeMs": 1.5
  },
  {
    "input": "Cu(OH)2CO3 -> CuO + CO2 + H2O",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.6
  },
  {
    "input": "2H2O2 -> O2 + H2O",
    "success": true,
    "balanced": "2H2O2 → O2 + 2H2O",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "NH4HCO3 -> NH3 + CO2 + H2O",
    "success": true,
    "balanced": "NH4HCO3 → NH3 + CO2 + H2O",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "CaSO3 -> CaO + SO2",
    "success": true,
    "balanced": "CaSO3 → CaO + SO2",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "2KClO3 -> KCl + O2",
    "success": true,
    "balanced": "2KClO3 → 2KCl + 3O2",
    "error": null,
    "timeMs": 1.6
  },
  {
    "input": "2NaNO2 + O2 -> 2NaNO3",
    "success": true,
    "balanced": "2NaNO2 + O2 → 2NaNO3",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "NH4NO2 -> N2 + H2O",
    "success": true,
    "balanced": "NH4NO2 → N2 + 2H2O",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "CaC2 -> CaO + C",
    "success": false,
    "balanced": null,
    "error": "No solution exists. Check if the equation is chemically valid.",
    "timeMs": 1.9
  },
  {
    "input": "CaO + H2O -> Ca(OH)2",
    "success": true,
    "balanced": "CaO + H2O → Ca(OH)2",
    "error": null,
    "timeMs": 1.9
  },
  {
    "input": "SO2 + H2O2 -> H2SO4",
    "success": true,
    "balanced": "SO2 + H2O2 → H2SO4",
    "error": null,
    "timeMs": 2
  },
  {
    "input": "NO + O3 -> NO2 + O2",
    "success": true,
    "balanced": "NO + O3 → NO2 + O2",
    "error": null,
    "timeMs": 2.6
  },
  {
    "input": "NO2 + O3 -> NO3 + O2",
    "success": true,
    "balanced": "NO2 + O3 → NO3 + O2",
    "error": null,
    "timeMs": 2.9
  },
  {
    "input": "CO + NO2 -> CO2 + NO",
    "success": true,
    "balanced": "CO + NO2 → CO2 + NO",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "SO2 + NO2 -> SO3 + NO",
    "success": true,
    "balanced": "SO2 + NO2 → SO3 + NO",
    "error": null,
    "timeMs": 3
  },
  {
    "input": "2NO + O2 -> 2NO2",
    "success": true,
    "balanced": "2NO + O2 → 2NO2",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "SiO2 + HF -> SiF4 + H2O",
    "success": true,
    "balanced": "SiO2 + 4HF → SiF4 + 2H2O",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "Na2O + H2O -> NaOH",
    "success": true,
    "balanced": "Na2O + H2O → 2NaOH",
    "error": null,
    "timeMs": 3.1
  },
  {
    "input": "CH4 + Cl2 -> CH3Cl + HCl",
    "success": true,
    "balanced": "CH4 + Cl2 → CH3Cl + HCl",
    "error": null,
    "timeMs": 3.2
  },
  {
    "input": "CH4 + Br2 -> CH3Br + HBr",
    "success": true,
    "balanced": "CH4 + Br2 → CH3Br + HBr",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "C2H6 + Cl2 -> C2H5Cl + HCl",
    "success": true,
    "balanced": "C2H6 + Cl2 → C2H5Cl + HCl",
    "error": null,
    "timeMs": 3.3
  },
  {
    "input": "C3H8 + Cl2 -> C3H7Cl + HCl",
    "success": true,
    "balanced": "C3H8 + Cl2 → C3H7Cl + HCl",
    "error": null,
    "timeMs": 3.3
  }
]